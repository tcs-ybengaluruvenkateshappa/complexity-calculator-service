import org.openapitools.generator.gradle.plugin.tasks.GenerateTask

plugins {
	id 'java'
	id 'org.springframework.boot' version '3.3.2'
	id 'io.spring.dependency-management' version '1.1.6'
	id 'org.openapi.generator' version '7.2.0'
}

group = 'com.containerstore.prestonintegrations.proposal'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(17)
	}
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
//	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation group: 'org.openapitools', name: 'jackson-databind-nullable', version: '0.2.6'
	implementation 'io.swagger.core.v3:swagger-annotations:2.2.22'
	implementation 'javax.annotation:javax.annotation-api:1.3.2'
	implementation 'javax.validation:validation-api:2.0.1.Final'
	compileOnly 'org.projectlombok:lombok'
//	runtimeOnly 'org.postgresql:postgresql'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}

tasks.named('test') {
	useJUnitPlatform()
}

task generateComplexityCalculatorAPI(type: GenerateTask) {
	generatorName = "spring"
	inputSpec = "${rootDir}/api-spec/complexity-calculator-service-api-contract.yml"
	outputDir = "${rootDir}/build/generated/api"
	apiPackage = "com.containerstore.prestonintegrations.proposal.controllers"
	modelPackage = "com.containerstore.prestonintegrations.proposal.models"
	configOptions = [interfaceOnly: 'true',
					 library      : 'spring-boot',
					 skipDefaultInterface : 'true']
	additionalProperties = [dateLibrary      : "java8",
							useBeanValidation: true]
	globalProperties = [
			apis      : '',
			models : '',
			apiTests : 'true',
			modelTests : 'true'
	]
}

sourceSets.main.java.srcDir "${rootDir}/build/generated"

compileJava.dependsOn tasks.generateComplexityCalculatorAPI